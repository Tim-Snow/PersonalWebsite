// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`about should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <About />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Full Stack Software Developer at Santander UK Technology.
        </h2>,
        <h2>
          BSc (Hons) Computer Science (Games) - 2:1
        </h2>,
        <p>
          I am an IT-minded individual who thrives on challenges and learning, as well as passing on skills to others, I enjoy working with and interact well with people, am keen and enthusiastic, and take pride in all my work.
        </p>,
        <p>
          The most used language day-to-day for me is Java, however I have discovered Kotlin recently and have enjoyed using it when possible as a replacement. In my free time I am usually playing with new technologies or creating little games for fun.
        </p>,
        <p>
          Other languages, libraries, frameworks, and technologies I have experience with:
        </p>,
        <ul>
          <li>
            Spring Boot & Cloud config
          </li>
          <li>
            Android (mainly Talkback accessibility)
          </li>
          <li>
            Angular 5
          </li>
          <li>
            ReactJS
          </li>
          <li>
            Javascript, Typescript, Node
          </li>
          <li>
            Linux, Mac, Windows
          </li>
          <li>
            TDD, BDD
          </li>
          <li>
            Continuous Integration
          </li>
          <li>
            Git
          </li>
          <li>
            Bash
          </li>
          <li>
            APIs (creation and consumption)
          </li>
          <li>
            Big Data - Hadoop, HiveQL, Impala, UDFs
          </li>
          <li>
            Scrum, Agile, Waterfall
          </li>
          <li>
            Encryption
          </li>
          <li>
            Spanish!
          </li>
        </ul>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Full Stack Software Developer at Santander UK Technology.",
        },
        "ref": null,
        "rendered": "Full Stack Software Developer at Santander UK Technology.",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "BSc (Hons) Computer Science (Games) - 2:1",
        },
        "ref": null,
        "rendered": "BSc (Hons) Computer Science (Games) - 2:1",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "I am an IT-minded individual who thrives on challenges and learning, as well as passing on skills to others, I enjoy working with and interact well with people, am keen and enthusiastic, and take pride in all my work.",
        },
        "ref": null,
        "rendered": "I am an IT-minded individual who thrives on challenges and learning, as well as passing on skills to others, I enjoy working with and interact well with people, am keen and enthusiastic, and take pride in all my work.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "The most used language day-to-day for me is Java, however I have discovered Kotlin recently and have enjoyed using it when possible as a replacement. In my free time I am usually playing with new technologies or creating little games for fun.",
        },
        "ref": null,
        "rendered": "The most used language day-to-day for me is Java, however I have discovered Kotlin recently and have enjoyed using it when possible as a replacement. In my free time I am usually playing with new technologies or creating little games for fun.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Other languages, libraries, frameworks, and technologies I have experience with:",
        },
        "ref": null,
        "rendered": "Other languages, libraries, frameworks, and technologies I have experience with:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              Spring Boot & Cloud config
            </li>,
            <li>
              Android (mainly Talkback accessibility)
            </li>,
            <li>
              Angular 5
            </li>,
            <li>
              ReactJS
            </li>,
            <li>
              Javascript, Typescript, Node
            </li>,
            <li>
              Linux, Mac, Windows
            </li>,
            <li>
              TDD, BDD
            </li>,
            <li>
              Continuous Integration
            </li>,
            <li>
              Git
            </li>,
            <li>
              Bash
            </li>,
            <li>
              APIs (creation and consumption)
            </li>,
            <li>
              Big Data - Hadoop, HiveQL, Impala, UDFs
            </li>,
            <li>
              Scrum, Agile, Waterfall
            </li>,
            <li>
              Encryption
            </li>,
            <li>
              Spanish!
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Spring Boot & Cloud config",
            },
            "ref": null,
            "rendered": "Spring Boot & Cloud config",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Android (mainly Talkback accessibility)",
            },
            "ref": null,
            "rendered": "Android (mainly Talkback accessibility)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Angular 5",
            },
            "ref": null,
            "rendered": "Angular 5",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "ReactJS",
            },
            "ref": null,
            "rendered": "ReactJS",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Javascript, Typescript, Node",
            },
            "ref": null,
            "rendered": "Javascript, Typescript, Node",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Linux, Mac, Windows",
            },
            "ref": null,
            "rendered": "Linux, Mac, Windows",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "TDD, BDD",
            },
            "ref": null,
            "rendered": "TDD, BDD",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Continuous Integration",
            },
            "ref": null,
            "rendered": "Continuous Integration",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Git",
            },
            "ref": null,
            "rendered": "Git",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Bash",
            },
            "ref": null,
            "rendered": "Bash",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "APIs (creation and consumption)",
            },
            "ref": null,
            "rendered": "APIs (creation and consumption)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Big Data - Hadoop, HiveQL, Impala, UDFs",
            },
            "ref": null,
            "rendered": "Big Data - Hadoop, HiveQL, Impala, UDFs",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Scrum, Agile, Waterfall",
            },
            "ref": null,
            "rendered": "Scrum, Agile, Waterfall",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Encryption",
            },
            "ref": null,
            "rendered": "Encryption",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Spanish!",
            },
            "ref": null,
            "rendered": "Spanish!",
            "type": "li",
          },
        ],
        "type": "ul",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Full Stack Software Developer at Santander UK Technology.
          </h2>,
          <h2>
            BSc (Hons) Computer Science (Games) - 2:1
          </h2>,
          <p>
            I am an IT-minded individual who thrives on challenges and learning, as well as passing on skills to others, I enjoy working with and interact well with people, am keen and enthusiastic, and take pride in all my work.
          </p>,
          <p>
            The most used language day-to-day for me is Java, however I have discovered Kotlin recently and have enjoyed using it when possible as a replacement. In my free time I am usually playing with new technologies or creating little games for fun.
          </p>,
          <p>
            Other languages, libraries, frameworks, and technologies I have experience with:
          </p>,
          <ul>
            <li>
              Spring Boot & Cloud config
            </li>
            <li>
              Android (mainly Talkback accessibility)
            </li>
            <li>
              Angular 5
            </li>
            <li>
              ReactJS
            </li>
            <li>
              Javascript, Typescript, Node
            </li>
            <li>
              Linux, Mac, Windows
            </li>
            <li>
              TDD, BDD
            </li>
            <li>
              Continuous Integration
            </li>
            <li>
              Git
            </li>
            <li>
              Bash
            </li>
            <li>
              APIs (creation and consumption)
            </li>
            <li>
              Big Data - Hadoop, HiveQL, Impala, UDFs
            </li>
            <li>
              Scrum, Agile, Waterfall
            </li>
            <li>
              Encryption
            </li>
            <li>
              Spanish!
            </li>
          </ul>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Full Stack Software Developer at Santander UK Technology.",
          },
          "ref": null,
          "rendered": "Full Stack Software Developer at Santander UK Technology.",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "BSc (Hons) Computer Science (Games) - 2:1",
          },
          "ref": null,
          "rendered": "BSc (Hons) Computer Science (Games) - 2:1",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "I am an IT-minded individual who thrives on challenges and learning, as well as passing on skills to others, I enjoy working with and interact well with people, am keen and enthusiastic, and take pride in all my work.",
          },
          "ref": null,
          "rendered": "I am an IT-minded individual who thrives on challenges and learning, as well as passing on skills to others, I enjoy working with and interact well with people, am keen and enthusiastic, and take pride in all my work.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The most used language day-to-day for me is Java, however I have discovered Kotlin recently and have enjoyed using it when possible as a replacement. In my free time I am usually playing with new technologies or creating little games for fun.",
          },
          "ref": null,
          "rendered": "The most used language day-to-day for me is Java, however I have discovered Kotlin recently and have enjoyed using it when possible as a replacement. In my free time I am usually playing with new technologies or creating little games for fun.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Other languages, libraries, frameworks, and technologies I have experience with:",
          },
          "ref": null,
          "rendered": "Other languages, libraries, frameworks, and technologies I have experience with:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                Spring Boot & Cloud config
              </li>,
              <li>
                Android (mainly Talkback accessibility)
              </li>,
              <li>
                Angular 5
              </li>,
              <li>
                ReactJS
              </li>,
              <li>
                Javascript, Typescript, Node
              </li>,
              <li>
                Linux, Mac, Windows
              </li>,
              <li>
                TDD, BDD
              </li>,
              <li>
                Continuous Integration
              </li>,
              <li>
                Git
              </li>,
              <li>
                Bash
              </li>,
              <li>
                APIs (creation and consumption)
              </li>,
              <li>
                Big Data - Hadoop, HiveQL, Impala, UDFs
              </li>,
              <li>
                Scrum, Agile, Waterfall
              </li>,
              <li>
                Encryption
              </li>,
              <li>
                Spanish!
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Spring Boot & Cloud config",
              },
              "ref": null,
              "rendered": "Spring Boot & Cloud config",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Android (mainly Talkback accessibility)",
              },
              "ref": null,
              "rendered": "Android (mainly Talkback accessibility)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Angular 5",
              },
              "ref": null,
              "rendered": "Angular 5",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "ReactJS",
              },
              "ref": null,
              "rendered": "ReactJS",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Javascript, Typescript, Node",
              },
              "ref": null,
              "rendered": "Javascript, Typescript, Node",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Linux, Mac, Windows",
              },
              "ref": null,
              "rendered": "Linux, Mac, Windows",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "TDD, BDD",
              },
              "ref": null,
              "rendered": "TDD, BDD",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Continuous Integration",
              },
              "ref": null,
              "rendered": "Continuous Integration",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Git",
              },
              "ref": null,
              "rendered": "Git",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Bash",
              },
              "ref": null,
              "rendered": "Bash",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "APIs (creation and consumption)",
              },
              "ref": null,
              "rendered": "APIs (creation and consumption)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Big Data - Hadoop, HiveQL, Impala, UDFs",
              },
              "ref": null,
              "rendered": "Big Data - Hadoop, HiveQL, Impala, UDFs",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Scrum, Agile, Waterfall",
              },
              "ref": null,
              "rendered": "Scrum, Agile, Waterfall",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Encryption",
              },
              "ref": null,
              "rendered": "Encryption",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Spanish!",
              },
              "ref": null,
              "rendered": "Spanish!",
              "type": "li",
            },
          ],
          "type": "ul",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
